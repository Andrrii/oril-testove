{"version":3,"sources":["services/oril-service.js","components/spinner/index.js","components/spinner/spinner.js","components/table/table.js","components/table/index.js","components/pages/list.page.js","components/chart/index.js","components/chart/chart.js","components/item-chart/index.js","components/item-chart/item-chart.js","components/pages/details-page.js","App.js","index.js"],"names":["OrilService","getResource","url","a","fetch","res","ok","Error","status","json","body","getAllPeople","map","_transformDate","getPerson","id","people","_sortByDate","data","_transformPeople","_formatDate","date","dd","getDate","mm","getMonth","yy","getFullYear","days","day","getDay","h","getHours","m","getMinutes","s","getSeconds","toString","slice","arr","sort","b","_changeZero","num","isNaN","dates","createdAt","Date","parse","curency","formatDate","_transformBack","Spinner","className","Table","oril","state","personList","search","update","then","setState","handleInputChange","event","query","currentTarget","value","_handleOptionChange","e","_byField","field","reverse","this","path","props","history","push","onChange","type","placeholder","defaultValue","name","length","filter","item","includes","onClick","onPersonSelected","nextPath","isActive","style","color","React","Component","withRouter","ListPage","Chart","_strDays","str","_strMonths","_strYears","dataList","ResponsiveContainer","width","height","AreaChart","x1","y1","x2","y2","offset","stopColor","stopOpacity","Area","dataKey","stroke","fill","XAxis","tickFormatter","axisLine","tickLine","YAxis","number","Tooltip","CartesianGrid","opacity","horizontal","ItemChart","itemList","personId","_setData","test","label","min","max","medium","sum","reduce","acc","curr","toFixed","error","changeData","setTimeout","DetailsPage","App","exact","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"qXACqBA,E,iDAIjBC,Y,uCAAc,WAAOC,GAAP,iBAAAC,EAAA,sEACMC,MAAMF,GADZ,WACNG,EADM,QAEFC,GAFE,sBAGF,IAAIC,MAAJ,0BAA6BL,EAA7B,uBAA+CG,EAAIG,OAAnD,MAHE,uBAKOH,EAAII,OALX,cAKNC,EALM,yBAMLA,GANK,2C,2DASdC,a,sBAAe,4BAAAR,EAAA,sEACM,EAAKF,YAAY,8CADvB,cACPI,EADO,yBAENA,EAAIO,IAAI,EAAKC,iBAFP,2C,KAKfC,U,uCAAY,WAAMC,GAAN,iBAAAZ,EAAA,sEACY,EAAKF,YAAL,qDAA+Dc,IAD3E,cACJC,EADI,OAEHX,EAAM,EAAKY,YAAYD,EAAOE,KAAKN,IAAI,EAAKO,mBAFzC,kBAGFd,GAHE,2C,2DAMZe,YAAc,SAACC,GAAoB,IAAflB,EAAc,wDAC5BmB,EAAKD,EAAKE,UACRD,EAAK,KAAIA,EAAK,IAAMA,GAE1B,IAAIE,EAAKH,EAAKI,WAAa,EACrBD,EAAK,KAAIA,EAAK,IAAMA,GAE1B,IAAIE,EAAKL,EAAKM,cAEd,GADMD,EAAK,KAAIA,EAAK,IAAMA,GACtBvB,EAKE,CACF,IAAIyB,EAAO,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAE5CC,EAAMR,EAAKS,SACXC,EAAIV,EAAKW,WACTD,EAAI,KAAIA,EAAI,IAAMA,GACtB,IAAIE,EAAIZ,EAAKa,aACTD,EAAI,KAAIA,EAAI,IAAMA,GACtB,IAAIE,EAAId,EAAKe,aAGf,OAFMD,EAAI,KAAIA,EAAI,IAAMA,GAEjBP,EAAKC,GAAO,IAAKP,EAAK,IAAME,EAAI,IAAKE,EAAGW,WAAWC,OAAO,GAAI,IAAKP,EAAE,IAAIE,EAAE,IAAIE,EAdtF,OAAOb,EAAK,IAAME,EAAK,IAAME,G,KAkBjCT,YAAa,SAACsB,GACZ,OAAOA,EAAIC,MAAK,SAACrC,EAAGsC,GAAJ,OAAUtC,EAAEkB,KAAOoB,EAAEpB,KAAO,GAAK,M,KAGnDqB,YAAc,SAACC,GACb,OAAGC,MAAMD,GAAa,EACfA,G,KAGT9B,eAAiB,SAACgC,GACd,OAAO,2BACAA,GADP,IAEIC,UAAW,EAAK1B,YAAY,IAAI2B,KAAKF,EAAMC,UAAUR,MAAM,EAAE,MAC7DjB,KAAM0B,KAAKC,MAAMH,EAAMC,c,KAI/B3B,iBAAmB,SAACH,GAClB,OAAO,2BACFA,GADL,IAEEiC,QAAQ,EAAKP,aAAa1B,EAAOiC,SACjC5B,KAAM0B,KAAKC,MAAMhC,EAAOK,MACxB6B,WAAW,EAAK9B,YAAY,IAAI2B,KAAK/B,EAAOK,KAAKiB,MAAM,GAAG,KAAI,M,KAIlEa,eAAiB,SAACnC,GAChB,OAAO,2BACFA,GADL,IAEEK,KAAK,EAAKD,YAAY,IAAI2B,KAAK/B,EAAOK,OACtC6B,WAAWlC,EAAOK,KAAKiB,OAAO,O,wBClFvBc,ECCC,WACZ,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKA,UAAU,8BACf,qBAAKA,UAAU,8BACf,qBAAKA,UAAU,oCCDrBC,G,0NACJC,KAAO,IAAIvD,E,EAEXwD,MAAQ,CACJC,WAAW,GAIbC,OAAS,GACTlB,KAAK,Q,EASNmB,OAAS,WACR,EAAKJ,KAAK5C,eAAeiD,MAAK,SAAA5C,GAC3B,EAAK6C,SAAS,CAACJ,WAAYzC,Q,EAShC8C,kBAAoB,SAACC,GAEnB,IAAMC,EAAQD,EAAME,cAAcC,MAClC,EAAKL,SAAS,CACZH,OAAOM,K,EAIXG,oBAAsB,SAAAC,GACpB,IAAOX,EAAc,EAAKD,MAAnBC,WACDS,EAAQE,EAAEH,cAAcC,MAC9B,GAAa,SAAVA,EAAkB,CACnB,IAAM7D,EAAMoD,EAAWjB,KAAK,EAAK6B,SAAS,QAAO,IACjD,EAAKR,SAAS,CAACJ,WAAYpD,SAExB,GAAa,SAAV6D,EAAiB,CACvB,IAAM7D,EAAMoD,EAAWjB,KAAK,EAAK6B,SAAS,SAC1C,EAAKR,SAAS,CAACJ,WAAYpD,SAExB,GAAa,UAAV6D,EAAkB,CACxB,IAAM7D,EAAMoD,EAAWjB,KAAK,EAAK6B,SAAS,YAAW,IACrD,EAAKR,SAAS,CAACJ,WAAYpD,M,EAK/BgE,SAAU,SAACC,GAA2B,IAArBC,EAAoB,wDACnC,OAAGA,EAAgB,SAACpE,EAAGsC,GAAJ,OAAStC,EAAEmE,GAAS7B,EAAE6B,GAAS,GAAK,GAChD,SAACnE,EAAGsC,GAAJ,OAAStC,EAAEmE,GAAS7B,EAAE6B,GAAS,GAAK,I,uDA3C7C,WACEE,KAAKb,W,sBAUP,SAASc,GACPD,KAAKE,MAAMC,QAAQC,KAAKH,K,oBAkC1B,WAAU,IAAD,OAEP,EAA4BD,KAAKhB,MAA1BC,EAAP,EAAOA,WAAWC,EAAlB,EAAkBA,OAElB,OACI,qCACA,uBAAOmB,SAAY,SAACd,GAAD,OAAW,EAAKD,kBAAkBC,IAAQe,KAAO,OAAOzB,UAAY,kBAAkB0B,YAAc,mBAEvH,wBAAO1B,UAAY,gCAAnB,UACI,gCACI,qBAAIA,UAAU,gBAAd,UACI,oBAAIA,UAAU,SAAd,SACA,yBAAQ2B,aAAc,OAAQd,MAASM,KAAKN,MAAOb,UAAU,SAAU4B,KAAK,SAASJ,SAAY,SAACd,GAAD,OAAW,EAAKI,oBAAoBJ,IAArI,UACE,wBAAQG,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,wBAGF,oBAAIb,UAAU,SAAd,kBACA,oBAAIA,UAAU,SAAd,wBAGR,gCAGyB,IAArBI,EAAWyB,OAAY,6BAAI,6BAAI,cAAC,EAAD,QAC/BzB,EAAW0B,QAAO,SAAAC,GAAI,OAAIA,EAAKH,KAAKI,SAAS3B,MAAS9C,KAAI,SAACwE,GAAS,OACxE,qBAAI/B,UAAY,gBAAgCiC,QAAW,WACzD,EAAKZ,MAAMa,iBAAiBH,EAAKrE,IACjC,EAAKyE,SAAL,kBAAyBJ,EAAKrE,MAFhC,UAII,6BAAqB,4BAAIqE,EAAKH,QAAnBG,EAAKrE,IAChB,6BAAKqE,EAAKtC,YACTsC,EAAKK,SACF,oBAAIC,MAAO,CAACC,MAAO,WAAnB,oBACA,oBAAID,MAAO,CAACC,MAAO,WAAnB,uBAR+BP,EAAKrE,mB,GAvFpC6E,IAAMC,YCNXvC,EDiHAwC,YAAWxC,GEvGXyC,EARE,SAAC,GAAwB,IAAvBR,EAAsB,EAAtBA,iBACf,OACI,mCACA,cAAC,EAAD,CAAOA,iBAAoBA,O,uECLpBS,E,4MCaXC,SAAW,SAACC,GACR,OAAOA,EAAI7D,WAAWC,MAAM,GAAG,K,EAEnC6D,WAAa,SAACD,GACV,OAAOA,EAAI7D,WAAWC,OAAO,IAAI,K,EAGrC8D,UAAY,SAACF,GACT,OAAOA,EAAI7D,WAAWC,OAAO,IAAI,I,4CAIrC,WAAU,IAAD,OACE+D,EAAY7B,KAAKE,MAAjB2B,SACP,OACI,cAACC,EAAA,EAAD,CACAjD,UAAY,QACXkD,MAAM,MACNC,OAAQ,IAHT,SAKK,eAACC,EAAA,EAAD,CAAWvF,KAAQmF,EAAnB,UAEI,+BACI,iCAAgBtF,GAAK,QAAQ2F,GAAK,IAAIC,GAAK,IAAIC,GAAK,IAAIC,GAAK,IAA7D,UACI,sBAAMC,OAAS,KAAKC,UAAY,UAAUC,YAAc,KACxD,sBAAMF,OAAS,MAAMC,UAAY,UAAUC,YAAc,WAKjE,cAACC,EAAA,EAAD,CAAMC,QAAU,UAAUC,OAAS,UAAUC,KAAO,gBAEpD,cAACC,EAAA,EAAD,CACIH,QAAU,aACVI,cACQ,SAAApB,GACI,OAAGG,EAASnB,OAAS,GACV,EAAKe,SAASC,GAEjBG,EAASnB,OAAS,IAAMmB,EAASnB,QAAS,IACvC,EAAKiB,WAAWD,GAGhB,EAAKE,UAAUF,IAItCqB,UAAY,EACZC,UAAY,IAGhB,cAACC,EAAA,EAAD,CACIP,QAAU,UACVK,UAAY,EACZC,UAAY,EACZF,cAAiB,SAAAI,GAAM,iBAAQA,MAGnC,cAACC,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAeC,QAAW,GAAKC,YAAc,a,GA9D/BlC,IAAMC,WCX1BkC,G,mNCKXxE,KAAO,IAAIvD,E,EAEXwD,MAAQ,CACJwE,SAAS,GACT3B,SAAW,I,EAGf1C,OAAS,WACL,EAAKJ,KAAKzC,UAAU,EAAK4D,MAAMuD,UAAUrE,MAAK,SAAA5C,GAC3C,EAAK6C,SAAS,CAACmE,SAAUhH,Q,EAUhCkH,SAAW,SAACC,EAAKC,GACb,IACA,IAAIC,EAAKC,EAAKC,EACVC,EAAM,EACVL,EAAKvH,KAAI,SAAAwE,GAAI,OAAIoD,GAAKpD,EAAKnC,WAE3BoF,EAAMF,EAAKM,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAIzF,QAAU0F,EAAK1F,QAAUyF,EAAMC,KACpEL,EAAMH,EAAKM,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAIzF,QAAU0F,EAAK1F,QAAUyF,EAAMC,KAEpEJ,GAAUC,EAAIL,EAAKjD,QAAQ0D,QAAQ,GAC/B,EAAK/E,SAAL,2BACO,EAAKL,OADZ,IAEI6C,SAAS8B,EACTC,QACAI,IAAIA,EAAII,QAAQ,GAChBP,KAAKA,EAAIpF,QACTqF,KAAKA,EAAIrF,QACTsF,YAEP,MAAMnE,GACH,EAAKP,SAAS,CAACgF,OAAM,M,EAI7BC,WAAa,SAAC5H,GACV,IAAO8G,EAAY,EAAKxE,MAAjBwE,SACP,GAAa,QAAT9G,EAAgB,CAChB,IAAMiH,EAAOH,EAAS1F,OAAO,IAC7B,EAAK4F,SAASC,EAAK,aAElB,GAAY,UAATjH,EAAiB,CACrB,IAAMiH,EAAOH,EAAS1F,OAAO,IAC7B,EAAK4F,SAASC,EAAK,cAElB,GAAa,SAATjH,EAAgB,CACrB,IAAMiH,EAAOH,EAAS1F,MAAM,IAAI,KAChC,EAAK4F,SAASC,EAAK,U,uDA1C3B,WAAoB,IAAD,OACf3D,KAAKb,SACLoF,YAAW,WAAM,EAAKD,WAAW,SAAQ,O,oBA6C7C,WAAS,IAAD,OACJ,EAA4CtE,KAAKhB,MAA1C6C,EAAP,EAAOA,SAASmC,EAAhB,EAAgBA,IAAIH,EAApB,EAAoBA,IAAIC,EAAxB,EAAwBA,IAAIC,EAA5B,EAA4BA,OAC5B,OADA,EAAmCM,MAG3B,kDAIJ,qCACA,sBAAKxF,UAAU,sBAAf,UACI,wBACIiC,QAAS,WAAO,EAAKwD,WAAW,QAASzF,UAAU,mCADvD,kBAKA,wBACIiC,QAAS,WAAO,EAAKwD,WAAW,UAAWzF,UAAU,mCADzD,mBAKA,wBACIiC,QAAW,WAAO,EAAKwD,WAAW,SAAUzF,UAAU,mCAD1D,qBAMJ,oBAAIA,UAAY,QAAhB,SAAyBmB,KAAKhB,MAAM4E,QAEpC,cAAC,EAAD,CAAO/B,SAAYA,IAEnB,sBAAKhD,UAAY,UAAjB,UACI,oBAAIA,UAAY,WAAhB,mBACA,qBAAIA,UAAY,WAAhB,gBAA+BmF,QAEnC,sBAAKnF,UAAY,kBAAjB,UACI,sBAAKA,UAAU,sBAAf,UACI,oBAAIA,UAAY,WAAhB,iBACA,qBAAIA,UAAY,WAAhB,eAA8BgF,QAElC,sBAAKhF,UAAU,sBAAf,UACI,oBAAIA,UAAY,WAAhB,oBACA,qBAAIA,UAAY,WAAhB,eAA8BkF,QAElC,sBAAKlF,UAAU,sBAAf,UACI,oBAAIA,UAAY,WAAhB,iBACA,qBAAIA,UAAY,WAAhB,eAA8BiF,kB,GA1GX1C,IAAMC,YCDxBmD,G,mKAGjB,WACI,OACI,qBAAK3F,UAAU,QAAf,SACI,cAAC,EAAD,CAAW4E,SAAYzD,KAAKE,MAAMuD,iB,GANTrC,IAAMC,Y,SCS1BoD,G,mNACnBzF,MAAS,CACP+B,iBAAmB,M,EAGrBA,iBAAmB,SAAAxE,GACjB,EAAK8C,SAAS,CACZ0B,iBAAiBxE,K,4CAIrB,WAAU,IAAD,OACP,OAEI,qBAAKsC,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOoB,KAAO,IAAIyE,OAAK,EAACC,OAAU,kBAAO,cAAC,EAAD,CAAU5D,iBAAoB,EAAKA,sBAC5E,cAAC,IAAD,CAAOd,KAAO,eAAeyE,OAAK,EAACE,UAAa,kBAAO,cAAC,EAAD,CAAanB,SAAY,EAAKzE,MAAM+B,iC,GAlB1EK,IAAMC,YCTvCwD,IAASF,OACP,cAAC,IAAMG,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6d8af01b.chunk.js","sourcesContent":["\r\nexport default class OrilService {\r\n  \r\n\r\n\r\n    getResource = async (url) => {\r\n      const res = await fetch(url)\r\n        if(!res.ok){\r\n          throw new Error(`Could not fetch ${url} , received ${res.status } `)\r\n        }\r\n      const body = await res.json()\r\n      return body\r\n    }\r\n  \r\n    getAllPeople = async() => {\r\n      const res =  await this.getResource(\"https://oril-coins-test.herokuapp.com/list\")\r\n      return res.map(this._transformDate)\r\n    }\r\n  \r\n    getPerson = async(id) => {\r\n      const people =  await this.getResource(`https://oril-coins-test.herokuapp.com/item/${id}`)\r\n       const res = this._sortByDate(people.data.map(this._transformPeople))\r\n       return res\r\n    }\r\n\r\n    _formatDate = (date,a = false) => {\r\n      let dd = date.getDate();\r\n        if (dd < 10) dd = '0' + dd;\r\n      \r\n      let mm = date.getMonth() + 1;\r\n        if (mm < 10) mm = '0' + mm;\r\n      \r\n      let yy = date.getFullYear() ;\r\n        if (yy < 10) yy = '0' + yy;\r\n      if(!a){\r\n      \r\n        return dd + '.' + mm + '.' + yy;\r\n        }\r\n        \r\n        else{\r\n          var days = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\r\n        \r\n          let day = date.getDay()\r\n          let h = date.getHours()\r\n          if (h < 10) h = '0' + h;\r\n          let m = date.getMinutes()\r\n          if (m < 10) m = '0' + m;\r\n          let s = date.getSeconds()\r\n          if (s < 10) s = '0' + s;\r\n\r\n        return days[day] + \" \"+ dd + \".\" + mm +\".\"+ yy.toString().slice(-2) +\" \" +h+\":\"+m+\":\"+s;\r\n        }\r\n      }\r\n    \r\n    _sortByDate =(arr) => {\r\n      return arr.sort((a, b) => a.date > b.date ? 1 : -1);\r\n    }\r\n\r\n    _changeZero = (num) => {\r\n      if(isNaN(num)){return 0 }\r\n      return num\r\n    }\r\n\r\n    _transformDate = (dates) => {\r\n        return {\r\n            ...dates,\r\n            createdAt: this._formatDate(new Date(dates.createdAt.slice(0,10))),\r\n            date:(Date.parse(dates.createdAt))\r\n        }\r\n    }\r\n    \r\n    _transformPeople = (people) => {\r\n      return {\r\n        ...people,\r\n        curency:this._changeZero(+people.curency),\r\n        date:(Date.parse(people.date)),\r\n        formatDate:this._formatDate(new Date(people.date.slice(0,-1)),true)\r\n      }\r\n    }\r\n\r\n    _transformBack = (people) => {\r\n      return {\r\n        ...people,\r\n        date:this._formatDate(new Date(people.date)),\r\n        formatDate:people.date.slice(-1)\r\n      }\r\n    }\r\n\r\n}","import Spinner from \"./spinner\"\r\n\r\nexport default Spinner","import React from \"react\"\r\nimport \"./spinner.css\"\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"cssload-loader\">\r\n            <div className=\"cssload-inner cssload-one\"></div>\r\n            <div className=\"cssload-inner cssload-two\"></div>\r\n            <div className=\"cssload-inner cssload-three\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner","import React, { useState,useEffect } from \"react\"\r\nimport OrilService from \"../../services/oril-service\"\r\nimport {withRouter} from 'react-router-dom';\r\nimport Spinner from \"../spinner\"\r\nimport \"./table.css\"\r\nimport './input.css'\r\n\r\nclass Table extends React.Component {\r\n  oril = new OrilService();\r\n\r\n  state = {\r\n      personList:[\r\n       // {isActive: false, _id: \"60b8c59f81ada4e89cf6dfca\", name: \"Beer Coin\", id: \"beer_coin\", createdAt: \"27-05-21\"},\r\n       //{isActive: true, _id: \"60b8c59f81ada4e89cf6dfcb\", name: \"Cat Coin\", id: \"cat_coin\", createdAt: \"15-01-21\"}\r\n    ],\r\n    search : \"\",\r\n    sort:\"Name\",\r\n  }\r\n\r\n  \r\n  \r\n  componentDidMount(){\r\n    this.update()\r\n  }\r\n\r\n   update = () => {\r\n    this.oril.getAllPeople().then(people => {\r\n       this.setState({personList: people})\r\n    })\r\n  }\r\n\r\n  \r\n  nextPath(path) {\r\n    this.props.history.push(path);\r\n  } \r\n\r\n  handleInputChange = (event) => {\r\n    \r\n    const query = event.currentTarget.value;\r\n    this.setState({\r\n      search:query\r\n    })\r\n  }\r\n\r\n  _handleOptionChange = e => {\r\n    const {personList} = this.state\r\n    const value = e.currentTarget.value\r\n    if(value === \"date\") {\r\n      const res = personList.sort(this._byField(\"date\",true))\r\n      this.setState({personList: res})\r\n    }\r\n    else if(value === \"name\"){\r\n      const res = personList.sort(this._byField(\"name\"))\r\n      this.setState({personList: res})\r\n    }\r\n    else if(value === \"state\"){\r\n      const res = personList.sort(this._byField(\"isActive\",true))\r\n      this.setState({personList: res})\r\n    }\r\n    \r\n  }\r\n\r\n  _byField =(field,reverse = false) => {\r\n    if(reverse){return((a, b) =>a[field] < b[field] ? 1 : -1);}\r\n    return((a, b) =>a[field] > b[field] ? 1 : -1);\r\n  }\r\n\r\n  render() {\r\n      \r\n    const {personList,search} = this.state\r\n    \r\n    return (\r\n        <>  \r\n        <input onChange = {(event) => this.handleInputChange(event)} type = \"text\" className = \"input-clc ic-fa\" placeholder = \"Search by name\"  />\r\n\r\n        <table className = \"w3-table-all w3-hoverable tbl\">\r\n            <thead>\r\n                <tr className=\"w3-light-grey\">\r\n                    <th className=\"tbl-th\">\r\n                    <select defaultValue={'name'} value = {this.value} className=\"tbl-th\"  name=\"option\" onChange = {(event) => this._handleOptionChange(event)}>\r\n                      <option value=\"name\">Name</option>\r\n                      <option value=\"date\">Date</option>\r\n                      <option value=\"state\">State</option>\r\n                    </select>\r\n                    </th>\r\n                    <th className=\"tbl-th\">Date</th>\r\n                    <th className=\"tbl-th\">State</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n              \r\n            { \r\n                personList.length ===0?<tr><td><Spinner /></td></tr>:\r\n                personList.filter(item => item.name.includes(search)).map((item)=>{ return (\r\n            <tr className = \"w3-hover-gray\" key = {item.id} onClick = {() => {\r\n              this.props.onPersonSelected(item.id)\r\n              this.nextPath(`/detail/${item.id}`)\r\n              }}>\r\n                <td key = {item.id} ><b>{item.name}</b></td>\r\n                <td>{item.createdAt}</td>\r\n                {item.isActive? \r\n                    <td style={{color: '#5D5FEF'}}>Active</td> :\r\n                    <td style={{color: '#EF5DA8'}}>Disable</td>}\r\n            </tr>\r\n            )}) \r\n                }\r\n                </tbody>\r\n        </table>\r\n        </>\r\n    )\r\n        \r\n    }\r\n}\r\n\r\nexport default withRouter(Table)","import Table from \"./table\"\r\nexport default Table","import React from \"react\"\r\nimport Table from \"../table\"\r\n\r\nconst ListPage = ({onPersonSelected}) => {\r\n    return (\r\n        <>\r\n        <Table onPersonSelected = {onPersonSelected}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListPage","import Chart from \"./chart\"\r\nexport default Chart","import React from 'react'\r\nimport \"./chart.css\"\r\nimport {\r\n    AreaChart,\r\n    Area,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    ResponsiveContainer\r\n  } from \"recharts\";\r\n\r\nexport default class Chart extends React.Component {\r\n    \r\n    _strDays = (str) => {\r\n        return str.toString().slice(0,-12)\r\n    }\r\n    _strMonths = (str) => {\r\n        return str.toString().slice(-17,-12)\r\n    }\r\n\r\n    _strYears = (str) => {\r\n        return str.toString().slice(-14,-8)\r\n    }\r\n\r\n\r\n    render() {\r\n        const {dataList} = this.props\r\n        return (\r\n            <ResponsiveContainer\r\n            className = \"chart\"\r\n             width=\"85%\"\r\n             height={300}\r\n            >\r\n                 <AreaChart data = {dataList}>\r\n\r\n                     <defs>\r\n                         <linearGradient id = \"color\" x1 = \"0\" y1 = \"0\" x2 = \"0\" y2 = \"1\">\r\n                             <stop offset = \"0%\" stopColor = \"#007AFF\" stopOpacity ={0.6} />\r\n                             <stop offset = \"75%\" stopColor = \"#007AFF\" stopOpacity ={0.05} />\r\n\r\n                         </linearGradient>\r\n                     </defs>\r\n\r\n                     <Area dataKey = \"curency\" stroke = \"#007AFF\" fill = \"url(#color)\" />\r\n\r\n                     <XAxis \r\n                         dataKey = \"formatDate\" \r\n                         tickFormatter = {\r\n                                 str => {\r\n                                     if(dataList.length < 25) {\r\n                                         return this._strDays(str)\r\n                                     }\r\n                                     else if(dataList.length > 25 && dataList.length <=100){\r\n                                         return this._strMonths(str)\r\n                                     } \r\n                                     else {\r\n                                         return this._strYears(str)\r\n                                     }\r\n                                     }\r\n                             }\r\n                         axisLine = {false}\r\n                         tickLine = {false}\r\n                     />\r\n\r\n                     <YAxis \r\n                         dataKey = \"curency\"\r\n                         axisLine = {false}\r\n                         tickLine = {false}\r\n                         tickFormatter = {number => `$${number}`}/\r\n                     >\r\n\r\n                     <Tooltip />\r\n\r\n                     <CartesianGrid opacity = {0.3} horizontal = {false}/>\r\n                 </AreaChart>\r\n         </ResponsiveContainer>\r\n        )\r\n    }\r\n}","import ItemChart from \"./item-chart\"\r\nexport default ItemChart","import React from \"react\"\r\nimport OrilService from \"../../services/oril-service\";\r\nimport Chart from \"../chart\"\r\nimport \"./item-chart.css\"\r\n\r\nexport default class ItemChart extends React.Component {\r\n    oril = new OrilService();\r\n    \r\n    state = {\r\n        itemList:[],\r\n        dataList : []\r\n    }\r\n    \r\n    update = () => {\r\n        this.oril.getPerson(this.props.personId).then(people => {\r\n           this.setState({itemList: people})\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.update()\r\n        setTimeout(() =>{this.changeData(\"day\")},1000)\r\n        \r\n    }\r\n\r\n    _setData = (test,label) => {\r\n        try{\r\n        let min ,max ,medium = 0;\r\n        let sum = 0\r\n        test.map(item => sum+=item.curency)\r\n        \r\n        min = test.reduce((acc, curr) => acc.curency < curr.curency ? acc : curr);\r\n        max = test.reduce((acc, curr) => acc.curency > curr.curency ? acc : curr);\r\n        \r\n        medium = (sum/test.length).toFixed(0)\r\n            this.setState({\r\n                ...this.state,\r\n                dataList:test,\r\n                label,\r\n                sum:sum.toFixed(0),\r\n                min:+min.curency,\r\n                max:+max.curency,\r\n                medium\r\n            })\r\n        }catch(e){\r\n            this.setState({error:true})\r\n        }\r\n    }\r\n\r\n    changeData = (data) => {\r\n        const {itemList} = this.state\r\n        if (data === \"day\" ){\r\n            const test = itemList.slice(-12)\r\n            this._setData(test,\"Week\")\r\n        }\r\n        else if(data === \"month\"){\r\n            const test = itemList.slice(-55)\r\n            this._setData(test,\"Month\")\r\n        }\r\n        else if (data === \"year\"){\r\n            const test = itemList.slice(288,788)\r\n            this._setData(test,\"Year\")\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        const {dataList,sum,min,max,medium,error} = this.state\r\n        if(error){\r\n            return (\r\n                <h1>Go to first page</h1>\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n            <div className=\"w3-bar w3-hover bar\">\r\n                <button \r\n                    onClick={() => {this.changeData(\"day\")}} className=\"w3-button w3-white w3-border btn\"\r\n                >\r\n                    Week\r\n                </button>\r\n                <button \r\n                    onClick={() => {this.changeData(\"month\")}} className=\"w3-button w3-white w3-border btn\"\r\n                >\r\n                    Month\r\n                </button>\r\n                <button \r\n                    onClick = {() => {this.changeData(\"year\")}} className=\"w3-button w3-white w3-border btn\"\r\n                >\r\n                    Year\r\n                </button>\r\n            </div>    \r\n            <h1 className = \"label\">{this.state.label}</h1>        \r\n\r\n            <Chart dataList = {dataList} />\r\n\r\n            <div className = \"counter\">\r\n                <h3 className = \"header-3\">Total</h3>\r\n                <h1 className = \"header-1\">$ {+sum}</h1>\r\n            </div>\r\n            <div className = \"counters w3-row\">\r\n                <div className=\"w3-col s4 w3-center\">\r\n                    <h3 className = \"header-3\">Min</h3>\r\n                    <h1 className = \"header-1\">$ {min}</h1>\r\n                </div>\r\n                <div className=\"w3-col s4 w3-center\">\r\n                    <h3 className = \"header-3\">Medium</h3>\r\n                    <h1 className = \"header-1\">$ {medium}</h1>\r\n                </div>\r\n                <div className=\"w3-col s4 w3-center\">\r\n                    <h3 className = \"header-3\">Max</h3>\r\n                    <h1 className = \"header-1\">$ {max}</h1>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from \"react\"\r\nimport ItemChart from \"../item-chart\"\r\nimport \"./style.css\"\r\n\r\nexport default class DetailsPage extends React.Component {\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"block\">\r\n                <ItemChart personId = {this.props.personId} />\r\n            </div>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\n","import React from \"react\"\nimport { DetailsPage, ListPage } from \"./components/pages\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  \n} from \"react-router-dom\";\n\nimport './App.css';\n\n\n\nexport default class App extends React.Component  {\n  state  = {\n    onPersonSelected : null\n  }\n\n  onPersonSelected = id => {\n    this.setState({\n      onPersonSelected:id\n    })\n  }\n  \n  render() {\n    return (\n      \n        <div className=\"App\">\n          <Router>\n            <Switch>\n                <Route path = '/' exact render = {() => (<ListPage onPersonSelected = {this.onPersonSelected} />)}/>\n                <Route path = '/detail/:id?' exact component = {() => (<DetailsPage personId = {this.state.onPersonSelected} />)}/>\n            </Switch>\n          </Router>\n          \n        </div>\n    );\n   }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}